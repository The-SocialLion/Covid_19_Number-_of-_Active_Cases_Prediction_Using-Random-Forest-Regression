# -*- coding: utf-8 -*-
"""Untitled33.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vvJlGg6Wa3wQvPs8GG_8sIzFZUFR3Kh9
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

dataset=pd.read_csv('covid_19_clean_complete.csv')
dataset=dataset.drop(columns=['Province/State'])
dataset['Result']=abs(dataset['Recovered']-(dataset['Confirmed']+dataset['Deaths']))
dataset=dataset.dropna(how='any')

dataset

X=dataset.iloc[:,:-1].values
y=dataset.iloc[:,-1].values

from sklearn.preprocessing import LabelEncoder
le=LabelEncoder()
X[:,0]=le.fit_transform(X[:,0])
X[:,1]=le.fit_transform(X[:,1])
X[:,2]=le.fit_transform(X[:,2])
X[:,3]=le.fit_transform(X[:,3])

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)

from sklearn.ensemble import RandomForestRegressor
RFR=RandomForestRegressor(n_estimators=10,random_state=0)
RFR.fit(X_train,y_train)

y_pred=RFR.predict(X_test)
y_pred=np.around(y_pred,decimals=0)
np.set_printoptions(precision=2)
print(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))

plt.scatter(y_test ,y_pred, color = 'red')
plt.title('Actual vs Predicted values ')
plt.xlabel('Predicted values')
plt.ylabel('Actual values')
plt.show()

from sklearn.metrics import r2_score
print (abs(r2_score(y_test, y_pred)*100))